name: VirusTotal scan (on release)

on:
  release:
    types: [published]

jobs:
  vt-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: write    
    steps:
      - name: Checkout (README editing not required, but harmless)
        uses: actions/checkout@v4

      - name: Download released EXE
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir -p out
          # Change the pattern to match your asset name exactly if needed
          gh release download "${{ github.event.release.tag_name }}" \
            --repo "${{ github.repository }}" \
            --pattern "*SoDSaveEditor*.exe" \
            --dir out

      - name: Compute SHA256
        id: hash
        run: |
          FILE=$(ls out/*.exe | head -n1)
          echo "FILE=$FILE" >> $GITHUB_OUTPUT
          SHA=$(sha256sum "$FILE" | cut -d ' ' -f1)
          echo "SHA=$SHA" >> $GITHUB_OUTPUT

      - name: Submit to VirusTotal
        id: vt
        env:
          VT_API_KEY: ${{ secrets.VT_API_KEY }}
        run: |
          JSON=$(curl --silent --request POST \
            --url https://www.virustotal.com/api/v3/files \
            --header "x-apikey: $VT_API_KEY" \
            --form "file=@${{ steps.hash.outputs.FILE }}")
          ANALYSIS=$(echo "$JSON" | jq -r '.data.id')
          echo "ANALYSIS=$ANALYSIS" >> $GITHUB_OUTPUT

      - name: Wait for analysis to complete
        env:
          VT_API_KEY: ${{ secrets.VT_API_KEY }}
        run: |
          for i in {1..30}; do
            R=$(curl --silent --request GET \
              --url "https://www.virustotal.com/api/v3/analyses/${{ steps.vt.outputs.ANALYSIS }}" \
              --header "x-apikey: $VT_API_KEY")
            STATUS=$(echo "$R" | jq -r '.data.attributes.status')
            if [ "$STATUS" = "completed" ]; then
              break
            fi
            sleep 10
          done

      - name: Create link + checksum files
        run: |
          echo "https://www.virustotal.com/gui/file/${{ steps.hash.outputs.SHA }}" > out/VirusTotal.txt
          printf "%s  %s\n" "${{ steps.hash.outputs.SHA }}" "$(basename "${{ steps.hash.outputs.FILE }}")" > out/SHA256SUMS.txt

      - name: Upload link + checksum to the release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "${{ github.event.release.tag_name }}" \
            out/VirusTotal.txt out/SHA256SUMS.txt --clobber
